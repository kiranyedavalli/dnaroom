{"version":3,"sources":["call-membership.js"],"names":["CallMembership","extend","idAttribute","props","_self","default","type","isInitiator","required","personId","personUuid","require","state","values","audioMuted","videoMuted"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;AAGA,IAAMA,iBAAiB,yBAASC,MAAT,CAAgB;AACrCC,yBADqC;;AAGrCC,SAAO;AACL;;;;;;;;AAQAC,WAAO;AACLC,eAAS,KADJ;AAELC;AAFK,KATF;;AAcL;;;;;;;AAOAC,iBAAa;AACXF,eAAS,KADE;AAEXG,gBAAU,IAFC;AAGXF;AAHW,KArBR;;AA2BL;;;;;;AAMAG,cAAU;AACRD,gBAAU,IADF;AAERF;AAFQ,KAjCL;;AAsCL;;;;;;;;AAQAI,gBAAY;AACVC,eAAS,IADC;AAEVL;AAFU,KA9CP;;AAmDL;;;;;;;;;;;;AAYAM,WAAO;AACLJ,gBAAU,IADL;AAELF,oBAFK;AAGLO,cAAQ;AAHH,KA/DF;;AA2EL;;;;;;;AAOAC,gBAAY;AACVT,eAAS,KADC;AAEVC;AAFU,KAlFP;;AAuFL;;;;;;;AAOAS,gBAAY;AACVV,eAAS,KADC;AAEVC;AAFU;AA9FP;AAH8B,CAAhB,CAAvB;;kBAwGeN,c","file":"call-membership.js","sourcesContent":["import AmpState from 'ampersand-state';\n\n/**\n * @class\n */\nconst CallMembership = AmpState.extend({\n  idAttribute: `personId`,\n\n  props: {\n    /**\n     * Indicates if the member is the current user. (mostly just to simplify\n     * searching the CallMemberships array)\n     * @instance\n     * @memberof CallMembership\n     * @private\n     * @readonly\n     */\n    _self: {\n      default: false,\n      type: `boolean`\n    },\n\n    /**\n     * Indicates if the member started the call\n     * @instance\n     * @memberof CallMembership\n     * @type {boolean}\n     * @readonly\n     */\n    isInitiator: {\n      default: false,\n      required: true,\n      type: `boolean`\n    },\n\n    /**\n     * @instance\n     * @memberof CallMembership\n     * @type {string}\n     * @readonly\n     */\n    personId: {\n      required: true,\n      type: `string`\n    },\n\n    /**\n     * Mostly here for testing and potentially for widget support. Do not use.\n     * @instance\n     * @memberof CallMembership\n     * @private\n     * @type {string}\n     * @readonly\n     */\n    personUuid: {\n      require: true,\n      type: `string`\n    },\n\n    /**\n     * Indicates the member's relationship with the call. One of\n     * - notified - the party has been invited to the call but has not yet accepted\n     * - connected - the party is participating in the call\n     * - declined - the party chose not to accept the call\n     * - disconnected - the party is no longer participating in the call\n     * - waiting - reserved for future use\n     * @instance\n     * @memberof CallMembership\n     * @type {string}\n     * @readonly\n     */\n    state: {\n      required: true,\n      type: `string`,\n      values: [\n        `notified`,\n        `connected`,\n        `declined`,\n        `disconnected`,\n        `waiting`\n      ]\n    },\n\n    /**\n     * Indicates if the member has muted their microphone\n     * @instance\n     * @memberof CallMembership\n     * @type {boolean}\n     * @readonly\n     */\n    audioMuted: {\n      default: false,\n      type: `boolean`\n    },\n\n    /**\n     * Indicates if the member has disable their camera\n     * @instance\n     * @memberof CallMembership\n     * @type {boolean}\n     * @readonly\n     */\n    videoMuted: {\n      default: false,\n      type: `boolean`\n    }\n  }\n});\n\nexport default CallMembership;\n"]}